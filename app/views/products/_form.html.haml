= simple_form_for(@product, html: { class: "fancy-form" }) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  = f.input :name, label: "Nome do produto"
  = f.input :description, label: "descrição do produto", as: :text, input_html: {style: "min-height: 200px"}
  = f.input :original_price, label: "Preço do produto", input_html: { id: "money" }
  = f.input :price, as: :hidden, input_html: { id: "price_input" }
  - unless current_user.role == "seller"
    %small
      %em#price
  %br

  #pictures
    = f.simple_fields_for :product_pictures do |picture|
      = render 'product_picture_fields', f: picture
    .links
      = link_to_add_association ' + ', f, :product_pictures, class: "add-association-button"
  %br

  = f.input :categories, label: "Categorias do produto", as: :select, collection: ProductCategory.all, label_method: lambda { |category| "#{category.name}" }, input_html: { multiple: true, style: "min-height: 250px" }

  %h3 Tamanhos e quantidades

  #sizes
    = f.simple_fields_for :sizes do |size|
      = render 'size_fields', f: size
    .links
      = link_to_add_association ' + ', f, :sizes, class: "add-association-button"
  %br

  - unless current_user.role == "seller"
    = f.input :user_id, label: "Vendedor:", as: :select, collection: User.where(role: "seller"), label_method: :name, value_method: :id
    = f.input :graduation_value, label: "Porcentagem para graduação (%)", input_html: { value: f.object.graduation_value || 75, min: 0, max: 100 }
    = f.input :hidden, as: :hidden
    = f.input :location, label: "Localização:"
    = f.input :reference, label: "Referência:"
    = f.input :free_shipping, label: ("Definir como Frete Grátis? <br>").html_safe, as: :radio_buttons

    %h3 Ocultar produto da loja

    = f.input :hidden, as: :boolean, label: "Oculto"
  - else
    = f.input :user_id, as: :hidden, input_html: { value: current_user.id }

  %button.button.button--green.button--full-width{type: "submit"} Salvar
